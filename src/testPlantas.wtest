import plantas.*
import parcelas.*

describe "Test de plantas"{
	
	const plantaMenta1 = new Menta(anioObtencionSemilla = 2004, altura = 1)
	const plantaMenta2 = new Menta(anioObtencionSemilla = 2004, altura = 0.3)
	const plantaSoja = new Soja(anioObtencionSemilla = 2009, altura = 0.6)
	const plantaQuinoa1 = new Quinoa(horasDeSolQueTolera = 12, anioObtencionSemilla = 2010, altura = 0.6)
	const plantaQuinoa2 = new Quinoa(horasDeSolQueTolera = 9, anioObtencionSemilla = 2001, altura = 0.7)
	const plantaSojaTrans = new SojaTransgenica(anioObtencionSemilla = 2009, altura = 0.6)
	const plantaHierbabuena = new Hierbabuena(anioObtencionSemilla = 2004, altura = 1)
	
	test "Test de Menta"{
		assert.that(plantaMenta1.daNuevasSemillas())
		assert.equals(3,plantaMenta1.espacioQueOcupa())
		assert.notThat(plantaMenta2.daNuevasSemillas())
		assert.equals(0.9,plantaMenta2.espacioQueOcupa())
	}
	
	test "Test de Soja"{
		assert.equals(7,plantaSoja.horasDeSolQueTolera())
		assert.notThat(plantaSoja.daNuevasSemillas())
		assert.equals(0.3,plantaSoja.espacioQueOcupa())
	}
	
	test "Test de Quinoa"{
		assert.that(plantaQuinoa1.daNuevasSemillas())
		assert.equals(0.5,plantaQuinoa1.espacioQueOcupa())
		assert.that(plantaQuinoa2.daNuevasSemillas())
		assert.equals(0.5,plantaQuinoa2.espacioQueOcupa())
	}
	
	test "Soja Transg√©nica"{
		assert.notThat(plantaSojaTrans.daNuevasSemillas())
	}
	
	test "Test Hierbabuena"{
		assert.equals(6,plantaHierbabuena.espacioQueOcupa())
	}

}

describe "Test Parcelas ideales de plantas"{
	
	const plantaMenta = new Menta(anioObtencionSemilla = 2004, altura = 1)
	const plantaHierbabuena = new Hierbabuena(anioObtencionSemilla = 2004, altura = 1)
	const plantaSoja = new Soja(anioObtencionSemilla = 2009, altura = 1.6)
	const plantaSojaTrans = new SojaTransgenica(anioObtencionSemilla = 2009, altura = 1.6)
	const plantaQuinoa = new Quinoa(horasDeSolQueTolera = 12, anioObtencionSemilla = 2010, altura = 0.6)
	const parcela1 = new ParcelaEcologica(ancho = 20, largo = 1, horasDeSol = 8, plantas = [plantaMenta])
	const parcela2 = new ParcelaEcologica(ancho = 1, largo = 1, horasDeSol = 8, plantas = [plantaSoja])
	const parcela3 = new ParcelaEcologica(ancho = 1, largo = 1, horasDeSol = 9, plantas = [])
	
	test "Menta y Hierbabuena"{
		assert.that(plantaMenta.esParcelaIdeal(parcela1))
		assert.notThat(plantaHierbabuena.esParcelaIdeal(parcela2))
	}
	
	test "Quinoa"{
		assert.that(plantaQuinoa.esParcelaIdeal(parcela1))
		assert.notThat(plantaQuinoa.esParcelaIdeal(parcela2))
	}
	
	test "Soja"{
		assert.notThat(plantaSoja.esParcelaIdeal(parcela2))
		assert.that(plantaSoja.esParcelaIdeal(parcela3))
	}
	
	test "Soja Transgenica"{
		assert.notThat(plantaSojaTrans.esParcelaIdeal(parcela1))
		assert.that(plantaSojaTrans.esParcelaIdeal(parcela2))
	}
}
	
describe "Test Asociacion de Plantas"{
	
	const plantaMenta = new Menta(anioObtencionSemilla = 2004, altura = 1)
	const plantaHierbabuena = new Hierbabuena(anioObtencionSemilla = 2004, altura = 1)
	const plantaSoja = new Soja(anioObtencionSemilla = 2009, altura = 1.6)
	const plantaSojaTrans = new SojaTransgenica(anioObtencionSemilla = 2009, altura = 1.6)
	const plantaQuinoa = new Quinoa(horasDeSolQueTolera = 12, anioObtencionSemilla = 2010, altura = 0.6)
	const parcela1 = new ParcelaEcologica(ancho = 20, largo = 1, horasDeSol = 8, plantas = [plantaMenta])
	const parcela2 = new ParcelaEcologica(ancho = 1, largo = 1, horasDeSol = 8, plantas = [plantaSoja])
	const parcela3 = new ParcelaIndustrial(ancho = 1, largo = 1, horasDeSol = 9, plantas = [])
	
	test "Se Asocia bien"{
		assert.that(plantaSojaTrans.seAsociaBien(parcela2))
		assert.notThat(plantaSoja.seAsociaBien(parcela3))
		assert.that(plantaQuinoa.seAsociaBien(parcela3))
	}
}

